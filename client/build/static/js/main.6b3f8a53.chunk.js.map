{"version":3,"sources":["components/PetList.jsx","components/CreatePet.jsx","components/UpdatePet.jsx","components/Details.jsx","App.js","serviceWorker.js","index.js"],"names":["PetList","props","useState","pets","setPets","useEffect","fetchPets","axios","get","then","res","data","catch","err","console","log","to","className","map","pet","i","key","name","type","_id","CreatePet","setName","setType","description","setDescription","skill1","setSkill1","skill2","setSkill2","skill3","setSkill3","errors","setErrors","subtitle","onSubmit","e","preventDefault","petItem","post","navigate","value","onChange","target","properties","message","submitMessage","UpdatePet","grabSpecificPet","thepet","put","Details","setPet","onClick","delete","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.6b3f8a53.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport {navigate, Link} from '@reach/router';\n\nconst PetList = props => {\n  \n  const [pets, setPets] = useState([]);\n  \n  useEffect(() => {\n    fetchPets();\n  }, [])\n\n  const fetchPets = () => {\n    axios.get(\"http://localhost:8000/api/pets\")\n    .then( res => {\n      setPets(res.data);\n    }).catch(err => console.log(err));\n  }\n\n  return (\n    <>\n      <h1>Pet Shelter</h1>\n      <h4>These pets are looking for a good home</h4>\n      <Link to=\"/new\">Add a new pet</Link>\n      <table className=\"table\">\n        <thead><tr><th>Name</th><th>Type</th><th>Action</th></tr></thead>\n        <tbody>\n        {pets.map( (pet, i) => \n          <tr key={i}><td>{pet.name}</td><td>{pet.type}</td>\n          <td><Link to={`/${pet._id}`}>details</Link> | <Link to={`/${pet._id}/edit`}>edit</Link></td></tr>\n        )}\n        </tbody>\n      </table>\n    </>\n  )\n\n}\n\nexport default PetList;","import React, {useState} from 'react';\nimport {navigate, Link} from '@reach/router';\nimport axios from 'axios';\n\n\nconst CreatePet = props => {\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [skill1, setSkill1] = useState(\"\");\n  const [skill2, setSkill2] = useState(\"\");\n  const [skill3, setSkill3] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  \n  const createPet = e => {\n    e.preventDefault();\n    const petItem = {name, type, description, skill1, skill2, skill3};\n    axios.post(\"http://localhost:8000/api/pets\", petItem)\n      .then( res => {\n        if(res.data.errors){\n          setErrors(res.data.errors);\n          console.log(errors);\n        } else{\n          navigate(\"/\");\n        }\n      }).catch(err => console.log(err));\n  }\n\n\n\n  return (\n    <>\n    <h1>Pet Shelter</h1>\n    <h4>{props.subtitle}</h4>\n    <Link to=\"/\">Back to home</Link>\n    <div className=\"row\">\n      <form className=\"col-sm-8 offset-sm-2 mb-5\" onSubmit={createPet}>\n        <div className=\"form-group\">\n          <label>Name</label>\n          <input type=\"text\" className=\"form-control\" value={name} onChange={e => setName(e.target.value)}/>\n          {errors.name? <p className=\"text-danger\">{errors.name.properties.message}</p>: \"\"}\n        </div>\n        <div className=\"form-group\">\n          <label>Type</label>\n          <input type=\"text\" className=\"form-control\" value={type} onChange={e => setType(e.target.value)}/>\n          {errors.type? <p className=\"text-danger\">{errors.type.properties.message}</p>: \"\"}\n        </div>\n        <div className=\"form-group\">\n          <label>Description</label>\n          <textarea className=\"form-control\" value={description} onChange={e => setDescription(e.target.value)}></textarea>\n          {errors.description ? <p className=\"text-danger\">{errors.description.properties.message}</p>: \"\"}\n        </div>\n        <div className=\"form-group\">\n          <label>Skill 1</label>\n          <input type=\"text\" className=\"form-control\" value={skill1} onChange={e => setSkill1(e.target.value)}/>\n          {errors.skill1 ? <p className=\"text-danger\">{errors.skill1.properties.message}</p>: \"\"}\n        </div>\n        <div className=\"form-group\">\n          <label>Skill 2</label>\n          <input type=\"text\" className=\"form-control\" value={skill2} onChange={e => setSkill2(e.target.value)}/>\n          {errors.skill2 ? <p className=\"text-danger\">{errors.skill2.properties.message}</p>: \"\"}\n        </div>\n        <div className=\"form-group\">\n          <label>Skill 3</label>\n          <input type=\"text\" className=\"form-control\" value={skill3} onChange={e => setSkill3(e.target.value)}/>\n          {errors.skill3 ? <p className=\"text-danger\">{errors.skill3.properties.message}</p>: \"\"}\n        </div>\n        <input type=\"submit\" className=\"btn btn-success btn-block\" value={props.submitMessage}/>\n      </form>\n    </div>\n  </>\n  )\n}\n\nexport default CreatePet;","import React, {useState, useEffect} from 'react';\nimport {navigate, Link} from '@reach/router'; \nimport axios from 'axios';\n\nconst UpdatePet = props => {\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [skill1, setSkill1] = useState(\"\");\n  const [skill2, setSkill2] = useState(\"\");\n  const [skill3, setSkill3] = useState(\"\");\n  const [errors, setErrors] = useState({});\n\n  useEffect(() => {\n    grabSpecificPet();\n  }, [])\n  \n  const grabSpecificPet = () => {\n    console.log(props._id);\n    axios.get(`http://localhost:8000/api/pets/${props._id}`)\n    .then(res => {\n      console.log(res);\n      setName(res.data.name);\n      setType(res.data.type);\n      setDescription(res.data.description);\n      setSkill1(res.data.skill1);\n      setSkill2(res.data.skill2);\n      setSkill3(res.data.skill3);\n    }).catch(err => console.log(err));\n  }\n  \n\n  const updatePet = e => {\n    e.preventDefault();\n    const thepet = {name, type, description, skill1, skill2, skill3}\n    axios.put(`http://localhost:8000/api/pets/${props._id}`, thepet)\n      .then( res => {\n        console.log(res);\n        if(res.data.errors){\n          setErrors(res.data.errors);\n          navigate(`/${props._id}/edit`);\n        } else{\n          navigate(\"/\");\n        }\n      }).catch(err => console.log(err));\n  }\n\n  return (\n    <>\n    <h1>Pet Shelter</h1>\n    <h4>{props.subtitle}</h4>\n    <Link to=\"/\">Back to home</Link>\n    <div className=\"row\">\n      <form className=\"col-sm-8 offset-sm-2 mb-5\" onSubmit={updatePet}>\n        <div className=\"form-group\">\n          <label>Name</label>\n          <input type=\"text\" className=\"form-control\" value={name} onChange={e => setName(e.target.value)}/>\n          {errors.name? <p className=\"text-danger\">{errors.name.properties.message}</p>: \"\"}\n        </div>\n        <div className=\"form-group\">\n          <label>Type</label>\n          <input type=\"text\" className=\"form-control\" value={type} onChange={e => setType(e.target.value)}/>\n          {errors.type? <p className=\"text-danger\">{errors.type.properties.message}</p>: \"\"}\n        </div>\n        <div className=\"form-group\">\n          <label>Description</label>\n          <textarea className=\"form-control\" value={description} onChange={e => setDescription(e.target.value)}></textarea>\n          {errors.description ? <p className=\"text-danger\">{errors.description.properties.message}</p>: \"\"}\n        </div>\n        <div className=\"form-group\">\n          <label>Skill 1</label>\n          <input type=\"text\" className=\"form-control\" value={skill1} onChange={e => setSkill1(e.target.value)}/>\n          {errors.skill1 ? <p className=\"text-danger\">{errors.skill1.properties.message}</p>: \"\"}\n        </div>\n        <div className=\"form-group\">\n          <label>Skill 2</label>\n          <input type=\"text\" className=\"form-control\" value={skill2} onChange={e => setSkill2(e.target.value)}/>\n          {errors.skill2 ? <p className=\"text-danger\">{errors.skill2.properties.message}</p>: \"\"}\n        </div>\n        <div className=\"form-group\">\n          <label>Skill 3</label>\n          <input type=\"text\" className=\"form-control\" value={skill3} onChange={e => setSkill3(e.target.value)}/>\n          {errors.skill3 ? <p className=\"text-danger\">{errors.skill3.properties.message}</p>: \"\"}\n        </div>\n        <input type=\"submit\" className=\"btn btn-success btn-block\" value={props.submitMessage}/>\n      </form>\n    </div>\n  </>\n  )\n}\n\nexport default UpdatePet;","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport {navigate, Link} from '@reach/router';\n\nconst Details = props => {\n  \n  const [pet, setPet] = useState({});\n  \n  useEffect(() => {\n    grabSpecificPet();\n  }, [])\n  \n  const grabSpecificPet = () => {\n    console.log(props._id);\n    axios.get(`http://localhost:8000/api/pets/${props._id}`)\n    .then(res => {\n      setPet(res.data);\n    }).catch(err => console.log(err));\n  }\n\n  \n  const remove = () => {\n    axios.delete(`http://localhost:8000/api/pets/${props._id}`)\n    .then(res => {\n      navigate(\"/\");\n    })\n    .catch(err => console.log(err));\n  }\n\n  return (\n    <>\n      <h1>Pet Shelter</h1>\n      <h4>Details about: {pet.name}</h4>\n      <p>Pet type: {pet.type}</p>\n      <p>Description: {pet.description}</p>\n      <p>Skills: {pet.skill1}, {pet.skill2}, {pet.skill3}</p>\n      <button className=\"btn btn-danger mb-1\" onClick={remove}>Adopt {pet.name}</button><br></br>\n      <Link to=\"/\">Back to Home</Link>\n    </>\n  )\n\n}\n\nexport default Details;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Router} from '@reach/router';\nimport PetList from \"./components/PetList\";\nimport CreatePet from \"./components/CreatePet\";\nimport UpdatePet from \"./components/UpdatePet\";\nimport Details from \"./components/Details\";\n\nfunction App() {\n\n  return (\n    <div className=\"container\">\n      <Router >\n        <PetList path=\"/\" />\n        <CreatePet path=\"/new\" />\n        <Details path=\"/:_id\"/>\n        <UpdatePet path=\"/:_id/edit\"/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}